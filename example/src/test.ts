import { nativeProve, CIRCUITS, Proof } from '@railgun-community/native-prover';
// @ts-ignore
import artifacts from '@railgun-community/test-artifacts';
import { groth16 } from 'snarkjs';
import { exit } from 'process';

const inputs = {
  '1x2': {
    merkleRoot:
      '6222425295742392060788226778694769114506305024317843914902643617290374768963',
    boundParamsHash:
      '5503886748273164708420842716008201241883320952840973350860361157393451703433',
    nullifiers: [
      '2488005839880174281371566850742862351218389849446606448043615745372921337838',
    ],
    commitmentsOut: [
      '9234992571131647333247357771930742023149465059937129463161971224412861797614',
      '12370364856120035394197516272938228638762917627049011493729318707454651964882',
    ],
    token: '546584486846459126461364135121053344201067465379',
    publicKey: [
      '15684838006997671713939066069845237677934334329285343229142447933587909549584',
      '11878614856120328179849762231924033298788609151532558727282528569229552954628',
    ],
    signature: [
      '5181293116421014103177265635947003892133026849399547748829146679373812257552',
      '8568047000945003901530189894382225711765728260552666992910665804133857193548',
      '1450397741620488176611476255771473050251887270298067297708207665922762658911',
    ],
    randomIn: ['40419079083657351839989032552519750558'],
    valueIn: ['9975062344139650872817'],
    pathElements: [
      '2051258411002736885948763699317990061539314419500486054347250703186609807356',
      '798649550954976630491249457249448595186529806442197797936973525980664838735',
      '3860253447950477476238282376227806265529430782364398060886622632609206263506',
      '10967393403090576943058612851160624964768856418916757431315467969379265276661',
      '4177329909171803290170279196019319447087145475250139657920728261184066492383',
      '9144726083425293457189930182175584375755866170755203037168330473435257599943',
      '8236371367060628245320813572019740297071112030680295018688014025332724941914',
      '20704513355749821470300998799414731362245300238021178553122435057113528378476',
      '16736886623818773524263138779809916105169520362832964900272252437275369959388',
      '16415580715665869864634788741927065679186058985255106992778939765291984104497',
      '5715205213015845364387052206849889843188282449933545435544812025608946666822',
      '11013175031749877081979736330659999751637067247483574805902945041305483682579',
      '10708260192616993577686743465610377735773279483333447100671640147037242870779',
      '17708681376628530799996447981717676562184543188562031708516142906406141650368',
      '3967876508977884960877910167550068853181553556854105674925421366723704424223',
      '18077967785446169488603147322170139942753858441115263187838141084900323103797',
    ],
    leavesIndices: ['0'],
    nullifyingKey:
      '8368299126798249740586535953124199418524409103803955764525436743456763691384',
    npkOut: [
      '5280246683259189481824609043174626641382847007151084353260952279517326967964',
      '21418990642667166051619765047697084652665405941837773992925949179324085454529',
    ],
    valueOut: ['1', '9975062344139650872816'],
  },
  '1x3': {
    merkleRoot:
      '2581690797993317438345756983275151751451681085611707680347705956157208539827',
    boundParamsHash:
      '5525141804576156519879774472837517769785700547620788715531097450357494342647',
    nullifiers: [
      '15918568066824903628816111384512053805188402342113387451674919089465769208738',
    ],
    commitmentsOut: [
      '797157772168838282018457408695846569214014386899856791496437058170884981785',
      '4239335807798126782837291644564516393727154115429889127441380214721416329175',
      '1956014913869979036165550427739529591631009557390903975121872706015001114006',
    ],
    token: '76001907929418866304487584807096610665432814192',
    publicKey: [
      '11390323105470376060652971346398510899767427142731404863465231926944210441841',
      '14137372514473777045514415133322207296719577513043815979422345991558260134885',
    ],
    signature: [
      '4339942583808818937955629431825146074192164231935777482901299065791605764694',
      '21021145214269595893267103676317653178942782097872091669201319659916897151750',
      '1313370286862332059561886389816401023645487321300217530145359683855765327378',
    ],
    randomIn: ['1867916424456911627785017809375359055'],
    valueIn: ['1784002287223049250'],
    pathElements: [
      '14271419215124566887057127998066519863290314575274209102801528427201137806560',
      '4599457204305090215637996212560477853839773043447991230477453472050902099208',
      '20991549608896949485945496869937429339020133799492590845407188498800347595529',
      '2803695765979210890698985362276387163174498455100297553026204249380194041563',
      '11372938646250727093423717323665732185062639634224334055968593799280309056018',
      '16043706692457795964110559142697327093472833602800122118352923521508117634383',
      '7213920615049792526965546986826852849423172676863544738501765878765170675767',
      '1489296621721841068135899980824546924626565232731958711374916568072893624068',
      '11751374262217435467277718359204659903279217271497961961099754742820153769696',
      '15270862672375499599459909611177607075742484923312545145941882041797026205081',
      '11200245490252855972421988287519096321681247936497382520190112269810567627008',
      '12303073970898482020988181702592424841701771427478173111288662084361796549594',
      '10708260192616993577686743465610377735773279483333447100671640147037242870779',
      '17708681376628530799996447981717676562184543188562031708516142906406141650368',
      '3967876508977884960877910167550068853181553556854105674925421366723704424223',
      '18077967785446169488603147322170139942753858441115263187838141084900323103797',
    ],
    leavesIndices: ['986'],
    nullifyingKey:
      '10796134810011574294671276037733953580699819603899230862054650991544813264318',
    npkOut: [
      '16212052770001306857599806987531481536905701525468648396704102389784712462103',
      '13827564635006684243623170241580227205753850669055623693578815374428210659938',
      '4785457488047534712965055207182909299666140000412868874019241014955845016160',
    ],
    valueOut: [
      '278584411322741000',
      '1450000000000000000',
      '55417875900308250',
    ],
  },
};

(async () => {
  const art = artifacts[1][2];

  console.time('snarkjs');
  const p: { proof: Proof; publicSignals: string[] } = await groth16.fullProve(
    inputs['1x2'],
    art.wasm,
    art.zkey,
  );
  console.timeEnd('snarkjs');
  console.log(
    `VALID (snarkjs): ${await groth16.verify(
      art.vkey,
      p.publicSignals,
      p.proof,
    )}\n`,
  );

  try {
    console.time('native');
    const proof: Proof = nativeProve(
      CIRCUITS.JOINSPLIT_1X2,
      art.dat,
      art.zkey,
      inputs['1x2'],
      (progress: number) => {
        console.log(`Proof progress: ${progress}`);
      },
    );
    console.timeEnd('native');
    console.log(
      `VALID (native): ${await groth16.verify(
        art.vkey,
        p.publicSignals,
        proof,
      )}\n`,
    );
  } catch (err) {
    console.error(err);
  }

  exit(0);
})();
